name: build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: cache
      run: |
        set -eux
        if [ "$(stat --format %d /mnt)" != "$(stat --format %d .)" ]; then
          df -h /mnt
          sudo mkdir /mnt/.cache
          sudo chown ${USER} /mnt/.cache
          mkdir .cache
          sudo mount --bind /mnt/.cache .cache
        fi
    - name: devcontainer
      uses: ./.github/workflows/actions/devcontainer
      id: devcontainer
    - name: setup
      run: |
        echo 'EXEC=${{ steps.devcontainer.outputs.exec }}' >> $GITHUB_ENV
    - name: disk space - start
      run: |
        ${{ env.EXEC }} df -h
        df -h
    - name: configure
      run: |
        ${{ env.EXEC }} make configure
    - name: Cache Bazel repo
      id: bazel-repo
      uses: actions/cache@v4
      with:
        path: .cache/bazel-repo
        key: bazel-repo-${{ hashFiles('xla/*.bzl', 'xla/WORKSPACE',  'xla/.bazelrc', 'xla/*.bazelrc') }}
    - name: Cache Bazel build
      id: bazel-cache
      uses: actions/cache@v4
      with:
        path: .cache/bazel-build
        key: bazel-build-${{ hashFiles('xla/*.bzl', 'xla/WORKSPACE',  'xla/.bazelrc', 'xla/*.bazelrc') }}-${{ github.run_id }}
        restore-keys: |
          bazel-build-${{ hashFiles('xla/*.bzl', 'xla/WORKSPACE',  'xla/.bazelrc', 'xla/*.bazelrc') }}
    - name: fetch
      run: |
        ${{ env.EXEC }} make fetch
    - name: build
      run: |
        ${{ env.EXEC }} make build
    - name: disk space
      run: |
        ${{ env.EXEC }} df -h
        df -h
        du -sh .cache/*
