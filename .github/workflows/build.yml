name: build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [cpu, cuda, metal]
        exclude:
          - os: macos-latest
            build_type: cpu
          - os: macos-latest
            build_type: cuda
          - os: ubuntu-latest
            build_type: metal
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up devcontainer (Linux only)
        if: matrix.os == 'ubuntu-latest'
        uses: ./.github/workflows/actions/devcontainer
        id: devcontainer
      - name: setup exec
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo 'EXEC=${{ steps.devcontainer.outputs.exec }}' >> $GITHUB_ENV
          else
            echo 'EXEC=' >> $GITHUB_ENV
          fi
      - name: Cache Models
        uses: actions/cache@v4
        with:
          path: .cache
          key: models-${{ matrix.os }}-${{ hashFiles('Makefile') }}
      - name: cache
        run: |
          mkdir -p .cache
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            ${{ env.EXEC }} sh -ceux 'mkdir -p ~/.cache'
            ${{ env.EXEC }} sh -ceux 'mv .cache ~/.cache/llama.cpp'
          else
            mkdir -p ~/Library/Caches
            mv .cache ~/Library/Caches/llama.cpp
          fi
      - name: Build ${{ matrix.build_type }}
        run: |
            if [ "${{ matrix.build_type }}" = "cuda" ]; then
              ${{ env.EXEC }} sudo sh -ceux 'cd /usr/local/cuda/lib64/stubs/;rm -f libcuda.so.1;ln -s libcuda.so libcuda.so.1'
              ${{ env.EXEC }} env LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs make ${{ matrix.build_type }}
            else
              ${{ env.EXEC }} make ${{ matrix.build_type }}
            fi
      - name: cache-save
        run: |
          rm -rf .cache
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            ${{ env.EXEC }} sh -ceux 'mv -v ~/.cache/llama.cpp .cache'
          else
            mv ~/Library/Caches/llama.cpp .cache
          fi
